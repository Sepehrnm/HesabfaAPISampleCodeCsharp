@page
@using HesabfaAPISampleCode.Models
@model HesabfaAPISampleCode.Pages.Invoice.GetModel
@{
    ViewData["Title"] = "دریافت فاکتور";
    <div class="container">
        <div class="row">
            <div class="col-12">
                <div class="d-flex flex-column justify-content-center">
                    <div class="form-group">
                        <label for="type" class="form-label">نوع فاکتور </label>
                        <select id="type" name="type" class="form-select">
                            <option value="0">فروش</option>
                            <option value="1">خرید</option>
                            <option value="2">برگشت از فروش</option>
                            <option value="3">برگشت از خرید</option>
                            <option value="4">ضایعات</option>
                        </select>
                    </div>
                    <br />
                    <div class="form-group">
                        <label for="number" class="form-label">شماره فاکتور</label>
                        <input id="number" type="text" name="number" class="form-control" />
                    </div>
                    <br />
                    <button type="button" class="btn btn-primary submitButton">نمایش</button>
                </div>
                <div id="gridContainer"></div>
            </div>
        </div>
    </div>
}

<script>
    $('.submitButton').on('click', () => {
        let jsonBody = {
            number: parseInt(document.getElementById('number').value),
            type: parseInt(document.getElementById('type').value)
        };

        fetch("/api/Invoice/Get", {
            method: 'POST',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(jsonBody)
        })
            .then(response => {
                return response.json();
            })
            .then(data => {
                $("#gridContainer").dxDataGrid({
                    dataSource: [data],
                    columnMinWidth: 150,
                    columnHidingEnabled: true,
                    showBorders: true,
                    scrolling: {
                        mode: "standard"
                    },
                    onContentReady: function (e) {
                        e.component.updateDimensions();
                    }
                });
            })
            .catch(error => console.error('Error Occured.', error));
    })

</script>
